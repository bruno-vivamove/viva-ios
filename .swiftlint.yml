# SwiftLint Configuration for Viva iOS
# Focus on preventing ViewModel anti-patterns and ensuring code quality

# Paths to include in linting
included:
  - Viva/

# Paths to exclude from linting  
excluded:
  - Carthage
  - Pods
  - DerivedData
  - .build
  - vendor
  - VivaTests/
  - VivaUITests/
  - Viva/Preview Content/

# Rules to disable
disabled_rules:
  - trailing_whitespace # Can be auto-fixed
  - unused_closure_parameter # Sometimes needed for clarity

# Rules to enable (opt-in rules)
opt_in_rules:
  - attributes
  - closure_end_indentation
  - closure_spacing
  - empty_count
  - explicit_init
  - file_header
  - first_where
  - force_unwrapping
  - implicitly_unwrapped_optional
  - multiline_parameters
  - operator_usage_whitespace
  - overridden_super_call
  - private_outlet
  - redundant_nil_coalescing
  - sorted_first_last
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call

# Custom rules to prevent ViewModel anti-patterns
custom_rules:
  # Prevent ViewModel creation in navigationDestination closures
  viewmodel_in_navigation:
    name: "ViewModel in Navigation Closure"
    regex: '\.navigationDestination[^{]*\{[^}]*ViewModel\s*\('
    message: "Don't create ViewModels in navigationDestination closures. Pass primitive values and create ViewModels in the destination view's init."
    severity: error

  # Prevent ViewModel creation in sheet closures  
  viewmodel_in_sheet:
    name: "ViewModel in Sheet Closure"
    regex: '\.sheet[^{]*\{[^}]*ViewModel\s*\('
    message: "Don't create ViewModels in sheet closures. Pass primitive values and create ViewModels in the destination view's init."
    severity: error

  # Prevent ViewModel creation in fullScreenCover closures
  viewmodel_in_fullscreen:
    name: "ViewModel in FullScreenCover Closure"
    regex: '\.fullScreenCover[^{]*\{[^}]*ViewModel\s*\('
    message: "Don't create ViewModels in fullScreenCover closures. Pass primitive values and create ViewModels in the destination view's init."
    severity: error

  # Warn about @State with ObservableObject (should use @StateObject)
  state_with_observable_object:
    name: "State with ObservableObject"
    regex: '@State.*:\s*\w*ViewModel[?]?'
    message: "Use @StateObject instead of @State for ViewModels that conform to ObservableObject."
    severity: warning

  # Warn about @ObservedObject without clear ownership
  observed_object_viewmodel:
    name: "ObservedObject ViewModel Warning"
    regex: '@ObservedObject.*:\s*\w*ViewModel'
    message: "Consider if @StateObject is more appropriate for ViewModel lifecycle management."
    severity: warning

  # Ensure ViewModels conform to ObservableObject
  viewmodel_observable_object:
    name: "ViewModel ObservableObject Conformance"
    regex: 'class\s+\w*ViewModel[^:]*:'
    message: "ViewModels should conform to ObservableObject for proper SwiftUI integration."
    severity: warning

  # Discourage force unwrapping in Views
  force_unwrap_in_view:
    name: "Force Unwrap in View"
    regex: '!\s*(?=\s*(\.|\n|\}))'
    message: "Avoid force unwrapping in Views. Use nil coalescing or conditional binding instead."
    severity: warning

# Line length limits
line_length:
  warning: 120
  error: 140

# Function body length limits  
function_body_length:
  warning: 50
  error: 80

# Type body length limits
type_body_length:
  warning: 300
  error: 400

# File length limits
file_length:
  warning: 500
  error: 800

# Cyclomatic complexity limits
cyclomatic_complexity:
  warning: 10
  error: 15

# Nesting depth limits
nesting:
  type_level:
    warning: 2
    error: 3
  statement_level:
    warning: 5
    error: 10

# Identifier name rules
identifier_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 40
    error: 50
  excluded:
    - id
    - URL
    - url
    - x
    - y

# Type name rules
type_name:
  min_length:
    warning: 3
    error: 2
  max_length:
    warning: 40
    error: 50

# Force unwrapping rule configuration
force_unwrapping:
  severity: warning

# Implicitly unwrapped optional rule configuration  
implicitly_unwrapped_optional:
  severity: warning

# SwiftUI specific configurations
attributes:
  always_on_same_line:
    - "@IBAction"
    - "@IBOutlet"
    - "@NSManaged"
    - "@objc"
    - "@Published"
    - "@State"
    - "@StateObject"
    - "@ObservedObject"
    - "@EnvironmentObject"
    - "@Environment"
    - "@Binding"
    - "@FocusState"

# Multiline parameters formatting
multiline_parameters:
  allowsSingleLine: false

# Reporter configuration
reporter: "xcode"

# Only show errors and warnings
strict: false